import React from "react";

const ICONS = {
  INVALID: "тЪл",
  "OTHER POSITION": "ЁЯЯб",
  FOUND: "ЁЯЯв",
  "MEI MATCH": "",
  "UYIR MATCH": "",
};

function Success({ words, attempts }) {
  let guesses = [];

  const triggerShare = () => {
    let text = `${words.length} роЪрпКро▒рпНроХро│рпН роЙроЯрпИроп роЗроирпНрод роЪрпКро▓рпНро▓рпЛроЯрпБ рокрпБродро┐ро░рпИ ${attempts} роорпБропро▒рпНроЪро┐роХро│ро┐ро▓рпН роорпБро▒ро┐ропроЯро┐родрпНродрпЗройрпН.\n\nроирпАроЩрпНроХро│рпН ро╡ро┐ро│рпИропро╛роЯ роЗроирпНрод ЁЯСЗя╕П роЗрогрпИрокрпНрокрпИроЪрпН роЪрпКроЯрпБроХрпНроХрпБроЩрпНроХро│рпН.`;
    if (navigator.share) {
      navigator.share({ text, url: window.location.href });
    } else {
      navigator.clipboard.writeText(text + "\n" + window.location.href);
      alert("Content copied to clipboard");
    }
  };

  return (
    <div className="card">
      <header className="card-header">
        <p className="card-header-title">
          <span className="has-text-centered mx-auto">
            ЁЯОЙя╕П ро╡ро╛ро┤рпНродрпНродрпБроХро│рпН! ЁЯОКя╕П
          </span>
        </p>
      </header>
      <div className="card-content">
        <p className="has-text-centered">
          роХрпКроЯрпБроХрпНроХрокрпНрокроЯрпНроЯ {words.length} роЪрпКро▒рпНроХро│рпИропрпБроорпН {attempts} роорпБропро▒рпНроЪро┐роХро│ро┐ро▓рпН
          роХрогрпНроЯрпБрокро┐роЯро┐родрпНродрпБ ро╡ро┐роЯрпНроЯрпАро░рпНроХро│рпН.
        </p>
        <div className="is-flex is-flex-direction-column">
          {guesses.map(({ results }, i) => (
            <div key={i}>
              {results.reduce((acc, curr) => acc + ICONS[curr], "")}
            </div>
          ))}
        </div>
      </div>
      <footer className="card-footer">
        <button
          href="#"
          className="card-footer-item is-ghost"
          onClick={() => triggerShare()}
        >
          ЁЯУгя╕П рокроХро┐ро░рпН
        </button>
      </footer>
    </div>
  );
}

export default Success;
